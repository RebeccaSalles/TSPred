source('~/GitHub/TSPred/dev/18.09/tspred.r')
proc1 <- LT(base=2)
proc2 <- BCT(lambda=NULL)
proc5 <- subsetting(test_len=20)
proc1 <- subsetting(test_len=20)
proc2 <- BCT(lambda=NULL)
proc3 <- WT(level=1, filter="bl14")
#Obtaining objects of the modeling class
modl1 <- ARIMA()
#Obtaining objects of the evaluating class
eval1 <- MSE()
eval2 <- MAPE()
#Defining a time series prediction process
tspred_1 <- tspred(subsetting=proc1,
processing=list(BCT=proc2,
WT=proc3),
modeling=modl1,
evaluating=list(MSE=eval1,
MAPE=eval2)
)
View(tspred_1)
summary(tspred_1)
#Obtaining objects of the processing class
proc4 <- SW(window_len = 6)
proc5 <- MinMax()
#Obtaining objects of the modeling class
modl2 <- NNET(size=5,sw=proc4,proc=list(MM=proc5))
#Defining a time series prediction process
tspred_2 <- tspred(subsetting=proc1,
processing=list(BCT=proc2,
WT=proc3),
modeling=modl2,
evaluating=list(MSE=eval1,
MAPE=eval2)
)
View(tspred_2)
summary(tspred_2)
#Running the first time series prediction process
tspred_1_subset <- subset(tspred_1, data=CATS[3])
data("CATS")
#Running the first time series prediction process
tspred_1_subset <- subset(tspred_1, data=CATS[3])
library(TSPred)
data("CATS")
#Running the first time series prediction process
tspred_1_subset <- subset(tspred_1, data=CATS[3])
View(tspred_1_subset)
tspred_1_prep <- preprocess(tspred_1_subset,prep_test=FALSE)
tspred_1_train <- train(tspred_1_prep)
tspred_1_pred <- predict(tspred_1_train, onestep=TRUE)
tspred_1_pred <- predict(tspred_1_train, onestep=TRUE)
source('~/GitHub/TSPred/dev/18.09/updt/s3/modeling.r')
tspred_1_pred <- predict(tspred_1_train, onestep=TRUE)
force(data)
force(data)
View(data)
data[[1]]
source('~/GitHub/TSPred/dev/18.09/updt/s3/modeling.r')
View(tspred_1_train)
source('~/GitHub/TSPred/dev/18.09/tspred.r')
tspred_1_pred <- predict(tspred_1_train, onestep=TRUE)
is.null(obj$data$prep$test)
length(obj$data$prep$test)>0
View(data)
names(obj$modeling)
source('~/GitHub/TSPred/dev/18.09/tspred.r')
tspred_1_pred <- predict(tspred_1_train, onestep=TRUE)
source('~/GitHub/TSPred/dev/18.09/tspred.r')
tspred_1_pred <- predict(tspred_1_train, onestep=TRUE)
tspred_1_postp <- postprocess(tspred_1_pred)
tspred_1_eval <- evaluate(tspred_1_postp)
View(tspred_1_eval)
#Running the first time series prediction process
tspred_1_subset <- subset(tspred_1, data=CATS[3])
tspred_1_prep <- preprocess(tspred_1_subset,prep_test=TRUE)
View(tspred_1_prep)
tspred_1_train <- train(tspred_1_prep)
tspred_1_pred <- predict(tspred_1_train, onestep=TRUE)
tspred_1_postp <- postprocess(tspred_1_pred)
tspred_1_eval <- evaluate(tspred_1_postp)
#Running the first time series prediction process
tspred_2_subset <- subset(tspred_2, data=CATS[3])
tspred_2_prep <- preprocess(tspred_2_subset,prep_test=TRUE)
tspred_2_train <- train(tspred_2_prep)
tspred_2_pred <- predict(tspred_2_train, onestep=FALSE)
tspred_2_postp <- postprocess(tspred_2_pred)
tspred_2_eval <- evaluate(tspred_2_postp,fitness=TRUE)
View(tspred_2_eval)
#Obtaining objects of the processing class
proc1 <- subsetting(test_len=20)
proc2 <- BCT(lambda=NULL)
#Obtaining objects of the modeling class
modl1 <- ARIMA()
#Obtaining objects of the evaluating class
eval1 <- MSE()
#Defining a time series prediction process
tspred_1 <- tspred(subsetting=proc1,
processing=list(BCT=proc2),
modeling=modl1,
evaluating=list(MSE=eval1)
)
summary(tspred_1)
proc3 <- WT(level=1, filter="bl14")
#Obtaining objects of the evaluating class
eval2 <- MAPE()
#Defining a time series prediction process
tspred_2 <- tspred(subsetting=proc1,
processing=list(BCT=proc2,
WT=proc3),
modeling=modl1,
evaluating=list(MSE=eval1,
MAPE=eval2)
)
summary(tspred_2)
#Obtaining objects of the processing class
proc4 <- SW(window_len = 6)
proc5 <- MinMax()
#Obtaining objects of the modeling class
modl2 <- NNET(size=5,sw=proc4,proc=list(MM=proc5))
#Defining a time series prediction process
tspred_3 <- tspred(subsetting=proc1,
processing=list(BCT=proc2,
WT=proc3),
modeling=modl2,
evaluating=list(MSE=eval1,
MAPE=eval2)
)
summary(tspred_3)
View(tspred_2_eval)
View(fittestEMD)
#Obtaining objects of the processing class
proc1 <- subsetting(test_len=20)
proc2 <- BCT(lambda=NULL)
#Obtaining objects of the modeling class
modl1 <- ARIMA()
#Obtaining objects of the evaluating class
eval1 <- MSE()
#Defining a time series prediction process
tspred_1 <- tspred(subsetting=proc1,
processing=list(BCT=proc2),
modeling=modl1,
evaluating=list(MSE=eval1)
)
summary(tspred_1)
proc3 <- WT(level=1, filter="bl14")
#Obtaining objects of the evaluating class
eval2 <- MAPE()
#Defining a time series prediction process
tspred_2 <- tspred(subsetting=proc1,
processing=list(BCT=proc2,
WT=proc3),
modeling=modl1,
evaluating=list(MSE=eval1,
MAPE=eval2)
)
summary(tspred_2)
proc4 <- SW(window_len = 6)
proc5 <- MinMax()
#Obtaining objects of the modeling class
modl2 <- NNET(size=5,sw=proc4,proc=list(MM=proc5))
#Defining a time series prediction process
tspred_3 <- tspred(subsetting=proc1,
processing=list(BCT=proc2,
WT=proc3),
modeling=modl2,
evaluating=list(MSE=eval1,
MAPE=eval2)
)
summary(tspred_3)
library(TSPred)
data("CATS")
data <- CATS[3]
tspred_1_run <- workflow(tspred_1,data=data,onestep=TRUE)
tspred_2_run <- workflow(tspred_2,data=data,prep_test=TRUE,onestep=TRUE)
tspred_3_run <- workflow(tspred_3,data=data,prep_test=TRUE,onestep=TRUE)
b <- benchmark(tspred_1_run,list(tspred_2_run,tspred_3_run),rank.by=c("MSE"))
View(b)
View(b[["rank"]])
b <- benchmark(tspred_2_run,list(tspred_3_run),rank.by=c("MSE"))
View(b)
View(b[["rank"]])
View(b)
